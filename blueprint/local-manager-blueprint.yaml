tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2/types.yaml
  - https://raw.githubusercontent.com/greggigon/bootstrap-local-manager-plugin/1.2/plugin.yaml


node_types:
  cloudify.nodes.LocalCloudifyManager:
    derived_from: cloudify.nodes.CloudifyManager
    properties:
      elasticsearch:
        description: 'Elasticsearch properties'
        default:
          host:
            type: string
            default: 'localhost'
          port:
            type: string
            default: 9200
          bootstrap:
            description: 'Whether to bootstrap or not Elasticsearch with Cloudify Indexes and Mapping'
            type: boolean
            default: true
      docker:
        description: 'Docker related properties'
        default:
          path:
            type: string
            default: 'docker'
            description: 'Docker executable path or docker command'
          import_url:
            type: string
            default: ''
            description: 'HTTP Url for Exported Docker container'
          registry_url:
            type: string
            default: ''
            description: 'Docker registry location for Cloudify Container'


inputs:
  resources_prefix:
    type: string
  manager_ip:           # Manager IP is being expected as Input
    type: string
  agent_user:
    type: string


node_templates:
  manager:
    type: cloudify.nodes.LocalCloudifyManager
    properties:
      docker:
        path: docker
        registry_url: host0000:5000/cloudify:latest

      elasticsearch:    # Having Elasticsearch not packaged with Docker CFY container, makes it usefull to bootstrap CFY Indexes
        host: localhost
        port: 9200
        bootstrap: true

      cloudify_packages:
        agents:
          ubuntu_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-ubuntu-agent_3.2.0-ga-b200_amd64.deb
          centos_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-centos-final-agent_3.2.0-ga-b200_amd64.deb
          windows_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-windows-agent_3.2.0-ga-b200_amd64.deb

      cloudify:
        resources_prefix: { get_input: resources_prefix }

        cloudify_agent:
          min_workers: 0
          max_workers: 5
          remote_execution_port: 22
          user: { get_input: agent_user }

        workflows:
          task_retries: -1  # this means forever
          task_retry_interval: 30

        policy_engine:
          start_timeout: 30

    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: bootstrap_local_manager.local_manager_plugin.bootstrap.bootstrap_docker
          inputs:
            cloudify_packages: { get_property: [manager, cloudify_packages]}
            docker: { get_property: [manager, docker] }
            manager_ip: { get_input: manager_ip }
            elasticsearch_host:  { get_property: [manager, elasticsearch, host]}
            elasticsearch_port:  { get_property: [manager, elasticsearch, port]}
            elasticsearch_bootstrap:  { get_property: [manager, elasticsearch, bootstrap]}

        stop:
          implementation:  bootstrap_local_manager.local_manager_plugin.bootstrap.stop_manager_container

        delete:
          implementation: bootstrap_local_manager.local_manager_plugin.bootstrap.clean_manager_containers_and_image
          inputs:
            delete_data_container: true   # if Data container should be removed when `cfy teardown` is called
            delete_image: true            # if downloaded Container Image should be removes when `cfy teardown` is called

      cloudify.interfaces.validation:
        creation:
          implementation: bootstrap_local_manager.local_manager_plugin.bootstrap.creation_validation
          inputs:
            cloudify_packages: { get_property: [manager, cloudify_packages] }
            docker: { get_property: [manager, docker] }


plugins:
  bootstrap_local_manager: 
    install: true
    executor: central_deployment_agent
    source: https://github.com/greggigon/bootstrap-local-manager-plugin/archive/1.2.zip


